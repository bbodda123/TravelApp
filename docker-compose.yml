services:
  postgres:
    image: postgres:16-alpine
    container_name: traveltracker_db
    env_file:
      - db.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 3           
    volumes:
      - db_data_postgres:/var/lib/postgresql/data
      - ./db/schema.sql:/docker-entrypoint-initdb.d/schema.sql:ro
    networks:
      - travel

  test:
    build: .
    command: npm test            
    depends_on:
      postgres:
        condition: service_healthy 
    env_file:
      - app.env
    networks:
      - travel

  app:
    build: .
    depends_on:
      postgres:
        condition: service_healthy 
    ports:
      - "3000"
    env_file:
      - app.env          
    networks:
      - travel

  caddy:
    image: caddy:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      #  Mount My Config File 
      - ./conf/Caddyfile:/etc/caddy/Caddyfile
    networks:
      - travel

volumes:
  db_data_postgres:

networks:
  travel:
